# ðŸš€ Optimized Multi-stage Dockerfile with Security Tools Pre-installed
# Built for maximum caching efficiency and performance

# ========================================
# Stage 1: Security Tools Base Image
# ========================================
FROM node:20-slim AS security-tools

# Install system dependencies and security tools in one layer
RUN apt-get update && apt-get install -y \
    firefox-esr \
    curl \
    wget \
    python3 \
    python3-pip \
    python3-venv \
    git \
    ca-certificates \
    && rm -rf /var/lib/apt/lists/*

# Create Python virtual environment for security tools
RUN python3 -m venv /opt/security-tools
ENV PATH="/opt/security-tools/bin:$PATH"

# Install security tools separately to avoid dependency conflicts
RUN pip install --no-cache-dir semgrep==1.137.0

# Install Checkov in a separate step (has conflicting urllib3 version)
RUN pip install --no-cache-dir --force-reinstall checkov

# Install TruffleHog (cached by version)
RUN curl -sSfL https://raw.githubusercontent.com/trufflesecurity/trufflehog/main/scripts/install.sh | \
    sh -s -- -b /usr/local/bin v3.90.8

# Verify security tools installation
RUN trufflehog --version && \
    semgrep --version && \
    checkov --version

# ========================================
# Stage 2: Node Dependencies Layer
# ========================================
FROM security-tools AS dependencies

WORKDIR /app

# Copy package files first for better caching
COPY package*.json ./

# Install Node.js dependencies (highly cached)
RUN npm ci --only=production --no-audit --no-fund

# Install Playwright Firefox with deps (cached by version)
RUN npx playwright install firefox --with-deps

# ========================================
# Stage 3: Application Runtime
# ========================================
FROM dependencies AS runtime

# Create non-root user
RUN groupadd -r appuser && useradd -r -g appuser -m appuser

# Set up Playwright cache and data directory for non-root user
RUN mkdir -p /home/appuser/.cache /app/data && \
    mv /root/.cache/ms-playwright /home/appuser/.cache/ 2>/dev/null || true && \
    chown -R appuser:appuser /home/appuser/.cache /app/data

# Copy application files (separate layer for source changes)
COPY --chown=appuser:appuser src/ ./src/
COPY --chown=appuser:appuser public/ ./public/

# Copy security tool configs (now they exist)
COPY --chown=appuser:appuser .semgrepignore .trufflehogignore ./

# Set environment variables for security tools
ENV PATH="/opt/security-tools/bin:$PATH"
ENV PYTHONPATH="/opt/security-tools/lib/python3.11/site-packages"

# Switch to non-root user
USER appuser

# Expose port
EXPOSE 3000

# Health check with faster timeout
HEALTHCHECK --interval=15s --timeout=5s --start-period=10s --retries=2 \
  CMD curl -f http://localhost:3000/health || exit 1

# Start the application
CMD ["node", "src/server.js"]

# ========================================
# Labels for container metadata
# ========================================
LABEL maintainer="patrick@dugganusa.com"
LABEL version="3.0.0"
LABEL description="hacksaws2x4 - Enterprise content extraction API with pre-installed security tools"
LABEL security.tools="trufflehog,semgrep,checkov"
LABEL security.scan.date="2025-09-20"
LABEL org.opencontainers.image.source="https://github.com/pduggusa/genz-translator-api"